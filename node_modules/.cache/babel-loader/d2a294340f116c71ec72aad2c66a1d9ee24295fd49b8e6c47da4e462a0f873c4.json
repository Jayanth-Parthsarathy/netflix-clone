{"ast":null,"code":"var _jsxFileName = \"/home/jayanth/Documents/dev/netflix-clone/src/Banner.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport requests from \"./requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Banner() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(request.data.results[Math.floor(Math.random)]);\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n_s(Banner, \"jmRb9xsBKsoKCGHCjtfP3JDQESc=\");\n_c = Banner;\nexport default Banner;\nvar _c;\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"names":["React","requests","Banner","movie","setMovie","useState","useEffect","fetchData","request","axios","get","fetchNetflixOriginals","data","results","Math","floor","random"],"sources":["/home/jayanth/Documents/dev/netflix-clone/src/Banner.js"],"sourcesContent":["import React from \"react\";\nimport requests from \"./requests\";\nfunction Banner() {\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n            Math.floor(Math.random)\n        ]\n      )\n    }\n    fetchData();\n  }, []);\n\n  return <div></div>;\n}\n\nexport default Banner;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAClC,SAASC,MAAM,GAAG;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtCC,SAAS,CAAC,MAAM;IACd,eAAeC,SAAS,GAAG;MACzB,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACT,QAAQ,CAACU,qBAAqB,CAAC;MAC/DP,QAAQ,CACNI,OAAO,CAACI,IAAI,CAACC,OAAO,CAChBC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAC1B,CACF;IACH;IACAT,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AACpB;AAAC,GAfQL,MAAM;AAAA,KAANA,MAAM;AAiBf,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}